trigger:
- main  # Run pipeline when code is pushed to the main branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  AWS_REGION: 'us-east-1'  # Replace with your AWS region
  AWS_ACCOUNT_ID: '123456789012'  # Replace with your AWS Account ID
  ECR_REPOSITORY: 'my-python-app'  # Name of the ECR repository
  IMAGE_TAG: $(Build.BuildId)  # Auto-generate tag based on Build ID
  ECR_REGISTRY: '$(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com'  # Full ECR registry URL
  IMAGE_NAME: '$(ECR_REGISTRY)/$(ECR_REPOSITORY)'  # Full Image name with ECR

steps:
# 1️⃣ **Login to AWS ECR**
- task: Bash@3
  displayName: 'Login to Amazon ECR'
  inputs:
    targetType: 'inline'
    script: |
      aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin $(ECR_REGISTRY)

# 2️⃣ **Build the Docker image**
- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    command: 'build'
    Dockerfile: 'Dockerfile'
    repository: $(IMAGE_NAME)
    tags: '$(IMAGE_TAG)'

# 3️⃣ **Push the Docker image to Amazon ECR**
- task: Docker@2
  displayName: 'Push Docker Image to Amazon ECR'
  inputs:
    command: 'push'
    repository: $(IMAGE_NAME)
    tags: '$(IMAGE_TAG)'

# 4️⃣ **Update Kubernetes deployment.yaml with new image tag**
- script: |
    echo "Updating Kubernetes deployment file with new image tag"
    sed -i 's|image: .*|image: $(IMAGE_NAME):$(IMAGE_TAG)|' k8s/deployment.yaml
  displayName: 'Update Kubernetes Deployment YAML'

# 5️⃣ **Commit & Push Updated Deployment YAML (Triggers Argo CD Auto-Deploy)**
- task: Bash@3
  displayName: 'Commit & Push Updated YAML to GitHub'
  inputs:
    targetType: 'inline'
    script: |
      git config --global user.email "your-email@example.com"
      git config --global user.name "Azure DevOps"
      git add k8s/deployment.yaml
      git commit -m "Update deployment image to $(IMAGE_TAG)"
      git push origin main